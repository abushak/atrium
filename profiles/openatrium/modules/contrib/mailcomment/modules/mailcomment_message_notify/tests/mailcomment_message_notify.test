<?php
/**
 * @file
 * Test cases for Mail Comment Message Notify.
 */

/**
 * Test cases for Mail Comment Message Notify.
 */
class MailcommentMessageNotifyTestCase extends DrupalWebTestCase {
  protected $mailcomment_user;

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'Mail Comment Message Notify integration',
      'description' => 'Check that Mail Comment signatures are inserted into emails generated by Message Notify.',
      'group' => 'Mail Comment',
    );
  }

  /**
   * Implements setUp().
   */
  function setUp() {
    parent::setUp('mailcomment_message_notify', 'message_notify_example');
    $this->mailcomment_user = $this->drupalCreateUser(array('administer nodes', 'bypass node access', 'post comments', 'administer message types'));
    $this->drupalLogin($this->mailcomment_user);
    variable_set('mailcomment_mailbox', 'test@example.com');
  }

  /**
   * Test case for Mail Comment Message Notify.
   */
  public function testMailcommentMessageNotify() {
    // Enable on message type.
    $edit = array();
    $edit['mailcomment'] = TRUE;
    $this->drupalPost('admin/structure/messages/manage/comment_insert', $edit, t('Save message type'));

    // Create a new content-type.
    $ctype = $this->drupalCreateContentType();

    $edit = array();
    $edit['title'] = $this->randomName(8);
    $this->drupalPost('node/add/' . $ctype->type, $edit, t('Save'));

    // Create comment.
    $edit = array();
    $edit['comment_body[und][0][value]'] = 'Test comment.';
    $this->drupalPost('node/1', $edit, t('Save'));

    // Make sure Mail Comment acted on outgoing message.
    $this->assertMailString('body', '((( Reply ABOVE this LINE to POST a COMMENT )))', 1);
  }
}
